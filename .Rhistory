# 13.1. Prev. HR de fev/24
# Geração dos dados simulados
# set.seed(123) # Para reprodutibilidade
dados <- data.frame(HR = rnorm(5000, mean = 83.57, sd = 5))
dados
# Valor de referência para destaque
valor_referencia <- 77.83
media_valor <- mean(dados$HR) # Calcular a média dos dados
media_valor
# Calcular a probabilidade
probabilidade <- 1 - pnorm(valor_referencia, mean = 83.57, sd = 5)
probabilidade
# Gerar o gráfico ajustado
HR_fev <- ggplot(dados, aes(x = HR)) +
geom_histogram(aes(y = ..density..), binwidth = 1.5, fill = "blue", color = "black", alpha = 0.7) +
geom_vline(xintercept = valor_referencia, linetype = "dashed", color = "red", size = 1) +
geom_vline(xintercept = media_valor, linetype = "dashed", color = "black", size = 1) +
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
stat_function(
fun = dnorm,
args = list(mean = 83.57, sd = 5),
color = "red", linetype = "solid", size = 1
) +
geom_area(
stat = "function",
fun = dnorm,
args = list(mean = 83.57, sd = 5),
fill = "red", alpha = 0.5,
xlim = c(valor_referencia, max(dados$HR))
) +
labs(
x = "Humidade Rel. - Fevereiro/25 (%)",
y = "Densidade"
) +
annotate(
"text", x = 95, y = 0.05,
label = paste0("Prob = ", round(probabilidade * 100, 2), "%"),
color = "red", size = 3.9, fontface = "bold"
) +
annotate(
"text", x = 75, y = 0.065,
label = paste0("Média = ", round(media_valor, 2)),
color = "black", size = 3.9, fontface = "bold"
) +
theme_grey()
# Boxplot Temperatura ##########################################################
library(ggplot2)
# HISTOGRAMAS DE PROBABILIDADE (HR)
# 13. Probabilidades da Incidência de HR
# 13.1. Prev. HR de fev/24
# Geração dos dados simulados
# set.seed(123) # Para reprodutibilidade
dados <- data.frame(HR = rnorm(5000, mean = 83.57, sd = 5))
dados
# Valor de referência para destaque
valor_referencia <- 77.83
media_valor <- mean(dados$HR) # Calcular a média dos dados
media_valor
# Calcular a probabilidade
probabilidade <- 1 - pnorm(valor_referencia, mean = 83.57, sd = 5)
probabilidade
# Gerar o gráfico ajustado
HR_fev <- ggplot(dados, aes(x = HR)) +
geom_histogram(aes(y = ..density..), binwidth = 1.5, fill = "blue", color = "black", alpha = 0.7) +
geom_vline(xintercept = valor_referencia, linetype = "dashed", color = "red", size = 1) +
geom_vline(xintercept = media_valor, linetype = "dashed", color = "black", size = 1) +
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
stat_function(
fun = dnorm,
args = list(mean = 83.57, sd = 5),
color = "red", linetype = "solid", size = 1
) +
geom_area(
stat = "function",
fun = dnorm,
args = list(mean = 83.57, sd = 5),
fill = "red", alpha = 0.5,
xlim = c(valor_referencia, max(dados$HR))
) +
labs(
x = "Humidade Rel. - Fevereiro/25 (%)",
y = "Densidade"
) +
annotate(
"text", x = 95, y = 0.05,
label = paste0("Prob = ", round(probabilidade * 100, 2), "%"),
color = "red", size = 3.9, fontface = "bold"
) +
annotate(
"text", x = 75, y = 0.065,
label = paste0("Média = ", round(media_valor, 2)),
color = "black", size = 3.9, fontface = "bold"
) +
theme_grey()
HR_fev
# 13.1. Prev. HR de mar/24
# Geração dos dados simulados
# set.seed(123) # Para reprodutibilidade
dados <- data.frame(HR = rnorm(5000, mean = 82.72, sd = 5))
dados
# Valor de referência para destaque
valor_referencia <- 82.07
media_valor <- mean(dados$HR) # Calcular a média dos dados
media_valor
# Calcular a probabilidade
probabilidade <- 1 - pnorm(valor_referencia, mean = 82.72, sd = 5)
probabilidade
# Gerar o gráfico ajustado
HR_mar <- ggplot(dados, aes(x = HR)) +
geom_histogram(aes(y = ..density..), binwidth = 1.5, fill = "blue", color = "black", alpha = 0.7) +
geom_vline(xintercept = valor_referencia, linetype = "dashed", color = "red", size = 1) +
geom_vline(xintercept = media_valor, linetype = "dashed", color = "black", size = 1) +
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
stat_function(
fun = dnorm,
args = list(mean = 82.72, sd = 5),
color = "red", linetype = "solid", size = 1
) +
geom_area(
stat = "function",
fun = dnorm,
args = list(mean = 82.72, sd = 5),
fill = "red", alpha = 0.5,
xlim = c(valor_referencia, max(dados$HR))
) +
labs(
x = "Humidade Rel. - Março/25 (%)",
y = "Densidade"
) +
annotate(
"text", x = 95, y = 0.05,
label = paste0("Prob = ", round(probabilidade * 100, 2), "%"),
color = "red", size = 3.9, fontface = "bold"
) +
annotate(
"text", x = 75, y = 0.065,
label = paste0("Média = ", round(media_valor, 2)),
color = "black", size = 3.9, fontface = "bold"
) +
theme_grey()
HR_mar
# 13.1. Prev. HR de abr/24
# Geração dos dados simulados
# set.seed(123) # Para reprodutibilidade
dados <- data.frame(HR = rnorm(5000, mean = 85.22, sd = 5))
dados
# Valor de referência para destaque
valor_referencia <- 84
media_valor <- mean(dados$HR) # Calcular a média dos dados
media_valor
# Calcular a probabilidade
probabilidade <- 1 - pnorm(valor_referencia, mean = 85.22, sd = 5)
probabilidade
# Gerar o gráfico ajustado
HR_abr <- ggplot(dados, aes(x = HR)) +
geom_histogram(aes(y = ..density..), binwidth = 1.5, fill = "blue", color = "black", alpha = 0.7) +
geom_vline(xintercept = valor_referencia, linetype = "dashed", color = "red", size = 1) +
geom_vline(xintercept = media_valor, linetype = "dashed", color = "black", size = 1) +
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
stat_function(
fun = dnorm,
args = list(mean = 85.22, sd = 5),
color = "red", linetype = "solid", size = 1
) +
geom_area(
stat = "function",
fun = dnorm,
args = list(mean = 85.22, sd = 5),
fill = "red", alpha = 0.5,
xlim = c(valor_referencia, max(dados$HR))
) +
labs(
x = "Humidade Rel. - Abril/25 (%)",
y = "Densidade"
) +
annotate(
"text", x = 95, y = 0.05,
label = paste0("Prob = ", round(probabilidade * 100, 2), "%"),
color = "red", size = 3.9, fontface = "bold"
) +
annotate(
"text", x = 77, y = 0.065,
label = paste0("Média = ", round(media_valor, 2)),
color = "black", size = 3.9, fontface = "bold"
) +
theme_grey()
HR_abr
# 13.1. Prev. HR de abr/24
# Geração dos dados simulados
# set.seed(123) # Para reprodutibilidade
dados <- data.frame(HR = rnorm(5000, mean = 84.08, sd = 5))
dados
# Valor de referência para destaque
valor_referencia <- 85.15
media_valor <- mean(dados$HR) # Calcular a média dos dados
media_valor
# Calcular a probabilidade
probabilidade <- 1 - pnorm(valor_referencia, mean = 84.08, sd = 5)
probabilidade
# Gerar o gráfico ajustado
HR_mai <- ggplot(dados, aes(x = HR)) +
geom_histogram(aes(y = ..density..), binwidth = 1.5, fill = "blue", color = "black", alpha = 0.7) +
geom_vline(xintercept = valor_referencia, linetype = "dashed", color = "red", size = 1) +
geom_vline(xintercept = media_valor, linetype = "dashed", color = "black", size = 1) +
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
stat_function(
fun = dnorm,
args = list(mean = 84.08, sd = 5),
color = "red", linetype = "solid", size = 1
) +
geom_area(
stat = "function",
fun = dnorm,
args = list(mean = 84.08, sd = 5),
fill = "red", alpha = 0.5,
xlim = c(valor_referencia, max(dados$HR))
) +
labs(
x = "Humidade Rel. - Maio/25 (%)",
y = "Densidade"
) +
annotate(
"text", x = 95, y = 0.05,
label = paste0("Prob = ", round(probabilidade * 100, 2), "%"),
color = "red", size = 3.9, fontface = "bold"
) +
annotate(
"text", x = 76, y = 0.065,
label = paste0("Média = ", round(media_valor, 2)),
color = "black", size = 3.9, fontface = "bold"
) +
theme_grey()
HR_mai
library(patchwork)
library(magrittr)
(HR_fev + HR_mar)/(HR_abr + HR_mai)
# Carregamento dos Dados
library(readxl)
dados <- read_excel("ATM.xlsx", sheet = 11)
dados
str(dados)
# Previsão de Ventos no Porto do Recife - Próximos 12 meses
# Modelagem SARIMA - Ventos no Porto do Recife
# Pacotes
if(!require(forecast))install.packages("forecast")
library(forecast)
# Dados
pluv.r <- read_excel("ATM.xlsx", sheet = 11)
pluv.r
# Convertendo em ST
pluv.r <- ts(pluv.r,frequency = 12, start = c(2010,1))
pluv.r
str(pluv.r)
ts.plot(pluv.r)
decomp.pluv.r<-decompose(pluv.r)
plot(decomp.pluv.r)
ts.plot(pluv.r)
decomp.pluv.r<-decompose(pluv.r)
plot(decomp.pluv.r)
ggtsdisplay(pluv.r)
# Aferição Gráfica de Sazonalidade
seasonplot(pluv.r, col = rainbow(15), year.labels = T, type = "o",
pch = 22)
# Transformação Box-Cox
L <- BoxCox.lambda(pluv.r)
L
pluv.r_BC <- BoxCox(pluv.r, lambda = L)
pluv.r_BC
ts.plot(pluv.r_BC)
decomp.pluv.r_BC<-decompose(pluv.r_BC)
plot(decomp.pluv.r_BC)
ggtsdisplay(pluv.r_BC)
# Nº de Integrações (Diferenciações)
ndiffs(pluv.r_BC)
pluv.r_DIFF <- diff(pluv.r_BC,1)
ts.plot(pluv.r_DIFF)
decomp.pluv.r_DIFF<-decompose(pluv.r_DIFF)
plot(decomp.pluv.r_DIFF)
ggtsdisplay(pluv.r_DIFF) # "contar" "p" e "q"
# Nº de Diferenciações Sazonais # usando a série original
nsdiffs(pluv.r) # Acho que tenho que fazer isso com a série original!!!
pluv.r_DIFF2 <- diff(pluv.r,12)
seasonplot(pluv.r_DIFF2, col = rainbow(15), year.labels = T, type = "o",
pch = 22)
ggtsdisplay(pluv.r_DIFF2) # "contar" "P" e "Q"
# Ajustando ARIMA/SARIMA
# Separando os Dados em Treino (train) e Teste (test)
pluv.r_train <- ts(pluv.r[1:126], frequency = 12)
pluv.r_train
pluv.r_test <- ts(pluv.r[127:180], frequency = 12)
pluv.r_test
FIT <- Arima(y = pluv.r_train, order = c(1,1,1), seasonal = c(0,1,1), lambda = L)
summary(FIT)
coeftest(FIT)
# Plotar a Série Treino e Acurácia
plot(pluv.r_train)
lines(FIT$fitted, col = "blue")
accuracy(pluv.r_train, FIT$fitted)
# Calcular o coeficiente de determinação (R²)
# Fazer previsões no conjunto de treino
fitted_values <- FIT$fitted
ss_total <- sum((pluv.r_train - mean(pluv.r_train))^2)
ss_residual <- sum((pluv.r_train - fitted_values)^2)
r_squared <- 1 - (ss_residual / ss_total)
r_squared
# Realizando Agora Forecast para 86 Previsões para Compara com o Teste (test)
predi <- forecast(FIT, h = 54)
predi
plot(predi)
# Plotar as Previsões com a Base de Teste
plot(as.numeric(pluv.r_test), type = "l")
lines(as.numeric(predi$mean), col = "red")
accuracy(as.numeric(pluv.r_test), as.numeric(predi$mean))
# Diagnóstico dos Resíduos do Modelo
tsdiag(FIT)
qqnorm(FIT$residuals)
qqline(FIT$residuals, col = "red")
# Fazer 12 previsões além do banco de dados
FIT_full <- Arima(y = pluv.r, order = c(1,1,1), seasonal = c(1,1,0), lambda = L)
forecast_full <- forecast(FIT_full, h = 12)
forecast_full
plot(forecast_full)
lines(forecast_full$mean, col = "red", type = "o", pch = 16)
# HISTOGRAMAS DE PROBABILIDADE (HR)
# 13. Probabilidades da Incidência de pluv.r
# 13.1. Prev. pluv.r de fev/24
# Geração dos dados simulados
# set.seed(123) # Para reprodutibilidade
dados <- data.frame(pluv.r = rnorm(5000, mean = 141.76, sd = 70))
dados
# Valor de referência para destaque
valor_referencia <- 182
media_valor <- mean(dados$pluv.r) # Calcular a média dos dados
media_valor
# Calcular a probabilidade
probabilidade <- 1 - pnorm(valor_referencia, mean = 141.76, sd = 70)
probabilidade
# Gerar o gráfico ajustado
PLUV_fev <- ggplot(dados, aes(x = pluv.r)) +
geom_histogram(aes(y = ..density..), binwidth = 22, fill = "blue", color = "black", alpha = 0.7) +
geom_vline(xintercept = valor_referencia, linetype = "dashed", color = "red", size = 1) +
geom_vline(xintercept = media_valor, linetype = "dashed", color = "black", size = 1) +
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
stat_function(
fun = dnorm,
args = list(mean = 141.76, sd = 70),
color = "red", linetype = "solid", size = 1
) +
geom_area(
stat = "function",
fun = dnorm,
args = list(mean = 141.76, sd = 70),
fill = "red", alpha = 0.5,
xlim = c(valor_referencia, max(dados$pluv.r))
) +
labs(
x = "Chuvas - Fevereiro/25 (mmHg)",
y = "Densidade"
) +
annotate(
"text", x = 300, y = 0.003,
label = paste0("Prob = ", round(probabilidade * 100, 2), "%"),
color = "red", size = 3.9, fontface = "bold"
) +
annotate(
"text", x = 30, y = 0.005,
label = paste0("Média = ", round(media_valor, 2)),
color = "black", size = 3.9, fontface = "bold"
) +
theme_grey()
PLUV_fev
# Prev. pluv.r de mar/24
# Geração dos dados simulados
# set.seed(123) # Para reprodutibilidade
dados <- data.frame(pluv.r = rnorm(5000, mean = 96.41, sd = 83))
dados
# Valor de referência para destaque
valor_referencia <- 200
media_valor <- mean(dados$pluv.r) # Calcular a média dos dados
media_valor
# Calcular a probabilidade
probabilidade <- 1 - pnorm(valor_referencia, mean = 96.41, sd = 83)
probabilidade
# Gerar o gráfico ajustado
PLUV_mar <- ggplot(dados, aes(x = pluv.r)) +
geom_histogram(aes(y = ..density..), binwidth = 22, fill = "blue", color = "black", alpha = 0.7) +
geom_vline(xintercept = valor_referencia, linetype = "dashed", color = "red", size = 1) +
geom_vline(xintercept = media_valor, linetype = "dashed", color = "black", size = 1) +
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
stat_function(
fun = dnorm,
args = list(mean = 96.41, sd = 83),
color = "red", linetype = "solid", size = 1
) +
geom_area(
stat = "function",
fun = dnorm,
args = list(mean = 96.41, sd = 83),
fill = "red", alpha = 0.5,
xlim = c(valor_referencia, max(dados$pluv.r))
) +
labs(
x = "Chuvas - Março/25 (mmHg)",
y = "Densidade"
) +
annotate(
"text", x = 300, y = 0.003,
label = paste0("Prob = ", round(probabilidade * 100, 2), "%"),
color = "red", size = 3.9, fontface = "bold"
) +
annotate(
"text", x = -100, y = 0.003,
label = paste0("Média = ", round(media_valor, 2)),
color = "black", size = 3.9, fontface = "bold"
) +
theme_grey()
PLUV_mar
# Prev. pluv.r de abr/24
# Geração dos dados simulados
# set.seed(123) # Para reprodutibilidade
dados <- data.frame(pluv.r = rnorm(5000, mean = 136, sd = 100))
dados
# Valor de referência para destaque
valor_referencia <- 227
media_valor <- mean(dados$pluv.r) # Calcular a média dos dados
media_valor
# Calcular a probabilidade
probabilidade <- 1 - pnorm(valor_referencia, mean = 136, sd = 100)
probabilidade
# Gerar o gráfico ajustado
PLUV_abr <- ggplot(dados, aes(x = pluv.r)) +
geom_histogram(aes(y = ..density..), binwidth = 22, fill = "blue", color = "black", alpha = 0.7) +
geom_vline(xintercept = valor_referencia, linetype = "dashed", color = "red", size = 1) +
geom_vline(xintercept = media_valor, linetype = "dashed", color = "black", size = 1) +
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
stat_function(
fun = dnorm,
args = list(mean = 136, sd = 100),
color = "red", linetype = "solid", size = 1
) +
geom_area(
stat = "function",
fun = dnorm,
args = list(mean = 136, sd = 100),
fill = "red", alpha = 0.5,
xlim = c(valor_referencia, max(dados$pluv.r))
) +
labs(
x = "Chuvas - Abril/25 (mmHg)",
y = "Densidade"
) +
annotate(
"text", x = 400, y = 0.0015,
label = paste0("Prob = ", round(probabilidade * 100, 2), "%"),
color = "red", size = 3.9, fontface = "bold"
) +
annotate(
"text", x = -50, y = 0.003,
label = paste0("Média = ", round(media_valor, 2)),
color = "black", size = 3.9, fontface = "bold"
) +
theme_grey()
PLUV_abr
# Prev. pluv.r de mai/24
# Geração dos dados simulados
# set.seed(123) # Para reprodutibilidade
dados <- data.frame(pluv.r = rnorm(5000, mean = 134.49, sd = 100))
dados
# Valor de referência para destaque
valor_referencia <- 300
media_valor <- mean(dados$pluv.r) # Calcular a média dos dados
media_valor
# Calcular a probabilidade
probabilidade <- 1 - pnorm(valor_referencia, mean = 134.49, sd = 100)
probabilidade
# Gerar o gráfico ajustado
PLUV_mai <- ggplot(dados, aes(x = pluv.r)) +
geom_histogram(aes(y = ..density..), binwidth = 22, fill = "blue", color = "black", alpha = 0.7) +
geom_vline(xintercept = valor_referencia, linetype = "dashed", color = "red", size = 1) +
geom_vline(xintercept = media_valor, linetype = "dashed", color = "black", size = 1) +
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
stat_function(
fun = dnorm,
args = list(mean = 134.49, sd = 100),
color = "red", linetype = "solid", size = 1
) +
geom_area(
stat = "function",
fun = dnorm,
args = list(mean = 134.49, sd = 100),
fill = "red", alpha = 0.5,
xlim = c(valor_referencia, max(dados$pluv.r))
) +
labs(
x = "Chuvas - Maio/25 (mmHg)",
y = "Densidade"
) +
annotate(
"text", x = 400, y = 0.0015,
label = paste0("Prob = ", round(probabilidade * 100, 2), "%"),
color = "red", size = 3.9, fontface = "bold"
) +
annotate(
"text", x = -50, y = 0.003,
label = paste0("Média = ", round(media_valor, 2)),
color = "black", size = 3.9, fontface = "bold"
) +
theme_grey()
PLUV_mai
library(patchwork)
library(magrittr)
(PLUV_fev + PLUV_mar)/(PLUV_abr + PLUV_mai)
